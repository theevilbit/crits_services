#!/bin/sh
# (c) 2015, The MITRE Corporation. All rights reserved.
# Source code distributed pursuant to license agreement.
#
# Usage: bootstrap
# This script is designed to install all of the necessary dependencies for the
# services available.

#=====================Message Colors=========================
FAIL=$(tput setaf 1) #red
PASS=$(tput setaf 2) #green
HEAD=$(tput setaf 5) #magenta
INFO=$(tput setaf 6) #cyan
END=$(tput sgr0)   #ends color
#============================================================
PIP='pip'

verify()
{
    printf "${INFO}Testing Computer's Architecture${END}\n"
    ARCH=$(uname -m | sed 's/x86_//;s/amd//;s/i[3-6]86/32/')
    if [ "$ARCH" -ne '64' ];
    then
        printf "${FAIL}Non 64-bit system detected${END}\n"
        exit
    else
        printf "${PASS}Architecure 64-bit Passed${END}\n"
    fi
    printf "${INFO}Testing the distro type${END}\n"
    OS=''
    VER=''
    REL=''
    # Using lsb-release because os-release not available on Ubuntu 10.04
    if [ -f /etc/redhat-release ];
    then
        OS=$(cat /etc/redhat-release | sed 's/ [Enterprise|release].*//')
        VER=$(cat /etc/redhat-release | sed 's/.*release //;s/ .*$//')
        #Redhat/CentOS release version
        REL=$(echo $VER | sed 's/\..//')
        if [ $REL -lt 7 ];
        then
            #change for RHEL/CentOS < Release 7
            PIP='pip2.7'
        fi
    elif command -v lsb_release >/dev/null 2>&1
    then
        OS=$(lsb_release -i| sed 's/Distributor ID:\t//')
        VER=$(lsb_release -r| sed 's/Release:\t//')
    else
        OS=$(uname -s)
        VER=$(uname -r)
    fi
    OS="$(echo "$OS" | tr "[:upper:]" "[:lower:]")"
    VER="$(echo "$VER" | tr "[:upper:]" "[:lower:]")"
    # Let's export these, so we don't have to repeat this in every bootstrap
    export OS REL VER PIP
}

# Creates Default folders 
create_files()
{
    #TODO fix the fixed paths
    #Perhaps we'll do this later
    if [ ! -e /data/crits_services ];
    then
        printf "${HEAD}Creating Services Folder${END}\n"
        sudo mkdir -v -p /data/crits_services
    fi
    #It used to be /data/crits_services
    #sudo chown -R $USER:$GROUP /data/crits_services
    #This messes with git commits
    #chmod -R -v 0755 /data/crits_services
}

traversing_install()
{
    tpwd=$PWD
    for serv in ${tpwd}/* ;do
        if [ -d "$serv" ];
        then
            fbname=$(basename "${serv}" _service)
            if [ -f ${serv}/bootstrap ];
            then
                printf "${INFO}Installing dependencies for ${fbname}${END}\n"
                cd ${serv};
                ./bootstrap
                if [ $? -ne 0 ]
                then
                    printf "${FAIL}bootstrap failed for ${fbname}!${END}\n"
                    exit
                else
                    printf "${PASS}bootstrap complete for ${fbname}${END}\n"
                fi
                cd ${tpwd}
            fi
        fi
    done
    printf "${INFO}bootstrap finished!\nDependencies for the following \
    services need some manual setup (at least until somebody fixes them):\
    \n- chopshop_service\n- metacap_service (it needs chopshop)\n- pyew\n\
    - snugglefish_service\n- taxii_service${END}\n"
}

# Error Message
exit_restart()
{
    printf "\n${HEAD}Error: To restart at this step: sh $0 $1${END}\n"
    exit
}

#===============================================================
# This is the Beginning of the Script
#===============================================================
# Sees if there is an argument
if [ -z $1 ];
then
    STEP=1
else
    STEP=$1
fi
while [ $STEP -lt 4 ]
do
    case $STEP in
        1)
            verify ;;
        2)
            create_files ||exit_restart $STEP ;;
        3)
            traversing_install ||exit_restart $STEP ;;
        *)
            exit
            ;;
    esac
    STEP=$((STEP+1))
done

